{"version":3,"file":"static/js/54.f743f8c7.chunk.js","mappings":"8NACA,MAAuB,mBAAvB,EAAoD,sBAApD,EAAqF,uBAArF,EAA2H,2BAA3H,EAAiK,uB,SCElJ,SAASA,IACtB,IAAMC,ECAD,WACL,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOH,EAAP,KAAaI,EAAb,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACR,IACEC,EAAAA,GAAmCC,OAAON,IAAUO,MAAK,SAAAC,GACvDL,EAAQK,EAAKT,SAEf,MAAOU,OAER,CAACT,IAEGD,EDbMW,GAEb,OACE,yBACGX,IACC,eAAIY,UAAWC,EAAf,SACGb,EAAKc,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,KAAMC,EAAlC,EAAkCA,GAAlC,OACR,gBAAaN,UAAWC,EAAxB,WACE,gBACEM,IACEJ,EAAY,0CAC2BA,GACnC,8HAENK,IAAKH,EACLL,UAAWC,KAEb,gBAAID,UAAWC,EAAf,WACE,gBAAID,UAAWC,EAAf,wBAAuCG,MACvC,gBAAIJ,UAAWC,EAAf,mBAAkCI,UAZ7BC,Y,0MEVrBG,IAAAA,SAAAA,QAAyB,+BACzBA,IAAAA,SAAAA,OAAwB,mCAExB,IAAMC,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BtB,GAA/B,gGAEoBoB,IAAAA,IAAA,iBACXpB,EADW,oBACQqB,EADR,YAFpB,cAEGE,EAFH,yBAKIA,EAASf,MALb,iJAUA,SAAegB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gGAEoBL,IAAAA,IAAA,gCACIC,EADJ,yBAC4BI,EAD5B,YAFpB,cAEGF,EAFH,yBAKIA,EAASf,MALb,gEAOE,MAPF,gFAUA,SAAekB,IAAtB,4CAAO,OAAP,oBAAO,yGAA2BC,EAA3B,+BAAkC,EAAlC,kBAEoBP,IAAAA,IAAA,oCACQC,EADR,iBACwBM,IAH5C,cAEGJ,EAFH,yBAKIA,EAASf,MALb,iEAOE,MAPF,iFAUA,SAAeoB,EAAtB,+CAAO,OAAP,oBAAO,WAA+B5B,GAA/B,gGAEoBoB,IAAAA,IAAA,iBACXpB,EADW,4BACgBqB,IAHpC,cAEGE,EAFH,yBAKIA,EAASf,MALb,gEAOE,MAPF,gFAUA,SAAeqB,EAAtB,+CAAO,OAAP,oBAAO,WAAiC7B,GAAjC,gGAEoBoB,IAAAA,IAAA,iBACXpB,EADW,4BACgBqB,IAHpC,cAEGE,EAFH,yBAKIA,EAASf,MALb,gEAOE,MAPF","sources":["webpack://goit-react-hw-05-movies/./src/components/pages/Cast/Cast.module.css?f38e","components/pages/Cast/Cast.jsx","components/hooks/useFetchMoviesCast.jsx","components/servises/movies-API.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__2PZoJ\",\"castImg\":\"Cast_castImg__NXKod\",\"castItem\":\"Cast_castItem__5sVYS\",\"castItemDesc\":\"Cast_castItemDesc__qKCsX\",\"castName\":\"Cast_castName__0BYpG\"};","import { useFetchMoviesCast } from '../../hooks/useFetchMoviesCast';\r\nimport s from './Cast.module.css';\r\n\r\nexport default function Cast() {\r\n  const cast = useFetchMoviesCast();\r\n\r\n  return (\r\n    <div>\r\n      {cast && (\r\n        <ul className={s.cast}>\r\n          {cast.map(({ profile_path, character, name, id }) => (\r\n            <li key={id} className={s.castItem}>\r\n              <img\r\n                src={\r\n                  profile_path\r\n                    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\r\n                    : 'https://st4.depositphotos.com/4967103/22006/v/1600/depositphotos_220068534-stock-illustration-404-error-found-tee-print.jpg'\r\n                }\r\n                alt={name}\r\n                className={s.castImg}\r\n              ></img>\r\n              <ul className={s.castItemDesc}>\r\n                <li className={s.castName}>Character: {character}</li>\r\n                <li className={s.castName}>Name: {name}</li>\r\n              </ul>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport * as fetchMoviesByIdAPI from '../servises/movies-API';\r\n\r\nexport function useFetchMoviesCast() {\r\n  const { movieId } = useParams();\r\n  const [cast, setCast] = useState([]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      fetchMoviesByIdAPI.fetchMoviesCast(Number(movieId)).then(data => {\r\n        setCast(data.cast);\r\n      });\r\n    } catch (error) {}\r\n    return;\r\n  }, [movieId]);\r\n\r\n  return cast;\r\n}\r\n","import axios from 'axios';\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\naxios.defaults.keyAPI = 'ddda8272dece2632275115613738c84b';\r\n\r\nconst KEY_API = 'ddda8272dece2632275115613738c84b';\r\n\r\nexport async function fetchMoviesById(movieId) {\r\n  try {\r\n    const response = await axios.get(\r\n      `/movie/${movieId}?api_key=${KEY_API}&page=1`\r\n    );\r\n    return response.data;\r\n  } catch (error) {}\r\n  return;\r\n}\r\n\r\nexport async function fetchMoviesSearch(title) {\r\n  try {\r\n    const response = await axios.get(\r\n      `/search/movie?api_key=${KEY_API}&page=1&query=${title}&page=1`\r\n    );\r\n    return response.data;\r\n  } catch (error) {}\r\n  return null;\r\n}\r\n\r\nexport async function fetchMovies(page = 1) {\r\n  try {\r\n    const response = await axios.get(\r\n      `/trending/all/day?api_key=${KEY_API}&page=${page}`\r\n    );\r\n    return response.data;\r\n  } catch (error) {}\r\n  return null;\r\n}\r\n\r\nexport async function fetchMoviesCast(movieId) {\r\n  try {\r\n    const response = await axios.get(\r\n      `/movie/${movieId}/credits?api_key=${KEY_API}`\r\n    );\r\n    return response.data;\r\n  } catch (error) {}\r\n  return null;\r\n}\r\n\r\nexport async function fetchMoviesReview(movieId) {\r\n  try {\r\n    const response = await axios.get(\r\n      `/movie/${movieId}/reviews?api_key=${KEY_API}`\r\n    );\r\n    return response.data;\r\n  } catch (error) {}\r\n  return null;\r\n}\r\n"],"names":["Cast","cast","movieId","useParams","useState","setCast","useEffect","fetchMoviesByIdAPI","Number","then","data","error","useFetchMoviesCast","className","s","map","profile_path","character","name","id","src","alt","axios","KEY_API","fetchMoviesById","response","fetchMoviesSearch","title","fetchMovies","page","fetchMoviesCast","fetchMoviesReview"],"sourceRoot":""}